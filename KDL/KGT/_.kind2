#kdl_name = KgtMain
KDL.KGT.main (action: KDL.KGT.Action) : (Kindelia.IO KDL.KGT.Response)

// Mine action
KDL.KGT.main (KDL.KGT.Action.mint user value) = do Kindelia.IO {
  ask state = (Kindelia.IO.take KDL.KGT.State)
  // TODO : Remove n later, replace with current_block (given by kindelia
  // network)
  // This n variable is nothing, it is meant to be the current block, Kindelia
  // will give us this, but right now, since we dont have it, i am just going to
  // put this here xd
  let n = U120.new 0 0
  let state = User.Sipher.KGT.mint user n state
  ask (Kindelia.IO.save state)
  return (KDL.KGT.Response.mint Bool.true)
}

// Transfer action
KDL.KGT.main (KDL.KGT.Action.send from to value) = do Kindelia.IO {
  ask state = (Kindelia.IO.take KDL.KGT.State)
  let state = User.Sipher.KGT.transfer from to value state
  ask (Kindelia.IO.save state)
  return (KDL.KGT.Response.send Bool.true)
}

//Check Balance action
KDL.KGT.main (KDL.KGT.Action.get user) = do Kindelia.IO {
  ask state   = (Kindelia.IO.take KDL.KGT.State)
  let balance = User.Sipher.KGT.get user state
  return (KDL.KGT.Response.get balance)
}


#kdl_name = KgtInit
KDL.KGT.init : KDL.KGT.State {
  (KDL.KGT.State.new (U120.new 0 0) User.Sipher.PatriciaTree.empty)
}

#kdl_name = KGT
KDL.KGT : Kindelia.Contract KDL.KGT.State KDL.KGT.Action KDL.KGT.Response {
  Kindelia.Contract.new (act => KDL.KGT.main act) KDL.KGT.init
}
